<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.painter.dao.IUsersDao">
	<resultMap type="Users" id="userResultMap">
		<id property="userid" column="userid" />
		<result property="name" column="name" />
		<result property="pwd" column="pwd" />
		<result property="email" column="email" />
		<result property="money" column="money" />
		<result property="score" column="score" />
		<result property="regdate" column="regdate" />
		<result property="avatar" column="avatar" />
		<!-- <collection property="carts" ofType="Cart"> <id property="cartid" 
			column="cartid" /> <result property="goodsnum" column="goodsnum"/> <result 
			property="money" column="cmoney"/> <result property="score" column="cscore"/> 
			<association property="goods" javaType="Goods"> <id property="goodsid" column="goodsid"/> 
			<result property="img" column="img"/> <result property="name" column="gname"/> 
			<result property="price" column="price"/> <result property="score" column="gscore"/> 
			</association> </collection> -->
	</resultMap>

	<select id="findUsersByName" parameterType="string" resultMap="userResultMap">
		select * from users where name=#{name}
	</select>

	<select id="findUsersByLogin" parameterType="Users" resultMap="userResultMap">
		<!-- select u.*,c.*,g.*,c.money as cmoney,c.score as cscore,g.name as gname,g.score 
			as gscore from users u,cart c,goods g where c.goodsid=g.goodsid and u.userid=c.userid 
			and u.name=#{name} and u.pwd=#{pwd} -->


		select * from users where name=#{name} and pwd=#{pwd}
	</select>

	<select id="findUsersList" parameterType="Condition" resultMap="userResultMap">
       <![CDATA[select * from (select rownum as num,u.* from users u where rownum  <=#{pageIndex} * #{pageSize} order by userid) t where t.num> (#{pageIndex}-1)*#{pageSize}  ]]>
	</select>

	<select id="findUsersRecordCount" parameterType="Condition"
		resultType="int">
		select count(*) from users
	</select>


	<select id="findUsersById" parameterType="Users" resultMap="userResultMap">
		select * from users where userid = #{userid}
	</select>

	<sql id='TABLE_NAME'>USERs</sql>
	<sql id='TABLE_SEQUENCE'>SEQ_sUSER.nextval</sql>
	<insert id="addUsers" parameterType="Users">
		<selectKey keyProperty="userid" resultType="int" order="BEFORE">
			select
			<include refid="TABLE_SEQUENCE" />
			from dual
		</selectKey>
		<if test="avatar!=null">
			insert into
			<include refid="TABLE_NAME" />
			(userid,NAME,pwd,email,avatar)
			values ( #{userid}, #{name}, #{pwd},
			#{email}, #{avatar})
		</if>
		<if test="avatar==null">
			insert into
			<include refid="TABLE_NAME" />
			(userid,NAME,pwd,email)
			values ( #{userid}, #{name}, #{pwd},
			#{email})
		</if>
	</insert>

	<update id="updateUserById" parameterType="Users">

		update users
		<set>
			<if test="name!=null">name = #{name},</if>
			<if test="pwd!=null">pwd = #{pwd},</if>
			<if test="email!=null">email = #{email},</if>
			<if test="money!=null">money = #{money},</if>
			<if test="score!=null">score = #{score},</if>
			<if test="regdate!=null">regdate = #{regdate},</if>
			<if test="avatar!=null">avatar = #{avatar}</if>
		</set>
		<where>
			userid = #{userid}
		</where>
	</update>

	<delete id="delUserById" parameterType="Users">
		delete from users where
		userid = #{userid}
	</delete>

</mapper>